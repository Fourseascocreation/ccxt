import { Str, Int } from './types';
declare class Precise {
    decimals: number;
    integer: bigint;
    base: undefined;
    constructor(number: any, decimals?: Int);
    mul(other: any): Precise;
    div(other: any, precision?: number): Precise;
    add(other: any): Precise;
    mod(other: any): Precise;
    sub(other: any): Precise;
    abs(): Precise;
    neg(): Precise;
    min(other: any): any;
    max(other: any): any;
    gt(other: any): boolean;
    ge(other: any): boolean;
    lt(other: any): any;
    le(other: any): any;
    reduce(): this | undefined;
    equals(other: any): boolean;
    toString(): string;
    static stringMul(string1: Str, string2: Str): string | undefined;
    static stringDiv(string1: any, string2: any, precision?: number): string | undefined;
    static stringAdd(string1: Str, string2: Str): Str;
    static stringSub(string1: Str, string2: Str): string | undefined;
    static stringAbs(string: any): string | undefined;
    static stringNeg(string: any): string | undefined;
    static stringMod(string1: Str, string2: Str): string | undefined;
    static stringEquals(string1: Str, string2: Str): boolean | undefined;
    static stringEq(string1: Str, string2: Str): boolean | undefined;
    static stringMin(string1: Str, string2: Str): any;
    static stringMax(string1: Str, string2: Str): any;
    static stringGt(string1: Str, string2: Str): boolean | undefined;
    static stringGe(string1: Str, string2: Str): boolean | undefined;
    static stringLt(string1: Str, string2: Str): any;
    static stringLe(string1: Str, string2: Str): any;
}
export default Precise;
export { Precise };
