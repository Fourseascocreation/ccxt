using ccxt;
namespace Tests;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


public partial class testMainClass : BaseTest
{
    public static void testTrade(Exchange exchange, object method, object entry, object symbol, object now)
    {
        object format = new Dictionary<string, object>() {
            { "info", new Dictionary<string, object>() {} },
            { "id", "12345-67890:09876/54321" },
            { "timestamp", 1502962946216 },
            { "datetime", "2017-08-17 12:42:48.000" },
            { "symbol", "ETH/BTC" },
            { "order", "12345-67890:09876/54321" },
            { "side", "buy" },
            { "takerOrMaker", "taker" },
            { "price", exchange.parseNumber("0.06917684") },
            { "amount", exchange.parseNumber("1.5") },
            { "cost", exchange.parseNumber("0.10376526") },
            { "fees", new List<object>() {} },
            { "fee", new Dictionary<string, object>() {} },
        };
        // todo: add takeOrMaker as mandatory set
        // removed side because some public endpoints return trades without side
        object emptyNotAllowedFor = new List<object>() {"price", "amount", "cost"};
        testSharedMethods.assertStructure(exchange, method, entry, format, emptyNotAllowedFor);
        testSharedMethods.assertTimestamp(exchange, method, entry, now);
        testSharedMethods.assertSymbol(exchange, method, entry, "symbol", symbol);
        //
        testSharedMethods.assertInArray(exchange, method, entry, "side", new List<object>() {"buy", "sell"});
        testSharedMethods.assertInArray(exchange, method, entry, "takerOrMaker", new List<object>() {"taker", "maker"});
        testSharedMethods.assertFee(exchange, method, getValue(entry, "fee"));
        testSharedMethods.assertFees(exchange, method, getValue(entry, "fees"));
    }

}